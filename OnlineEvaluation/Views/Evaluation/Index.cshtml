@model IEnumerable<OnlineEvaluation.Models.Questionnaire>
@inject ApplicationDbContext _context;
@using Microsoft.AspNetCore.Identity;
@inject UserManager<ApplicationUser> _usermanager;
@{
    var typeName ="";
    if (ViewBag.type != null && ViewBag.type.ToString() == "Individual")typeName = "SELF APPRAISAL";
    if (ViewBag.type != null && ViewBag.type.ToString() == "Chairperson")typeName = "Chairperson Evaluation";
    if (ViewBag.type != null && ViewBag.type.ToString() == "Ceos")typeName = "C.E.O Evaluation";
    if (ViewBag.type != null && ViewBag.type.ToString() == "Director")typeName = "Director Evaluation";
    ViewData["Title"] = typeName;
}

<h1>@typeName</h1>
<h4>Rate performance using a scale of 1 [very poor] to 5 [very good] with comments as appropriate<br/>
[i.e., 1 – very poor; 2 – poor; 3 – fair; 4 – good and 5 – very good].</h4>
<form asp-action="Create" method="post">
    @if (ViewBag.type != null && ViewBag.type.ToString() == "Individual")
    {
        var corporation = new SelectList(_context.StateCorporation, "Id", "Name");
        <input type="hidden" name="CategoryId" value="@ViewBag.EvaluationTypeId"/>
        <input type="hidden" name="type" value="Individual"/>
        <div class="col-md-6">
            <div class="form-group">
                <label  class="control-label">Name of the State Corporate</label>
                <select name="corporationId" required class="form-control" asp-items="corporation"></select>
            </div>
            <div>
                <label  class="control-label">Enabling Legal Instrument</label>
                <input value="University Act" name="LegalInstrument" required class="form-control"/>
            </div>
        </div>
    }
    @if (ViewBag.type != null && ViewBag.type.ToString() == "Chairperson")
    {
        var corporation = new SelectList(_context.StateCorporation, "Id", "Name");
        var dd = _usermanager.GetUsersInRoleAsync("Chairperson").Result;
        var chairman = _usermanager.GetUsersInRoleAsync("Chairperson").Result.Select(a => new SelectListItem
                {
                    Text = $"{a.UserName}",
                    Value = a.Id.ToString()
                });
        <input type="hidden" name="CategoryId" value="@ViewBag.EvaluationTypeId"/>
        <input type="hidden" name="type" value="Chairperson"/>
        <div class="col-md-6">
            <div class="form-group">
                <label  class="control-label">Name of the State Corporate</label>
                <select name="corporationId" required class="form-control" asp-items="corporation"></select>
            </div>
            <div class="form-group">
                <label  class="control-label">Name of person being evaluated/position</label>
                <select name="ChairmanId" required class="form-control" asp-items="chairman"></select>
            </div>
            <div>
                <label  class="control-label">Date of Appointment </label>
                <input type="date" name="DateofAppointment" required class="form-control"/>
            </div>
            <div>
                <label  class="control-label">End of term </label>
                <input type="text" name="Endofterm" required class="form-control"/>
            </div>
        </div>
    }
    @if (ViewBag.type != null && ViewBag.type.ToString() == "Ceos")
    {
        var corporation = new SelectList(_context.StateCorporation, "Id", "Name");
        var chairman = _usermanager.GetUsersInRoleAsync("Chairperson").Result.Select(a => new SelectListItem
                {
                    Text = $"{a.UserName}",
                    Value = a.Id.ToString()
                });
        var ceoslist = _usermanager.GetUsersInRoleAsync("CEO").Result.Select(a => new SelectListItem
                {
                    Text = $"{a.UserName}",
                    Value = a.Id.ToString()
                });
        <input type="hidden" name="CategoryId" value="@ViewBag.EvaluationTypeId"/>
        <input type="hidden" name="type" value="Ceos"/>
        <div class="col-md-6">
            <div class="form-group">
                <label  class="control-label">Name of the State Corporate</label>
                <select name="corporationId" required class="form-control" asp-items="corporation"></select>
            </div>
            <div>
                <label  class="control-label">Name of the Chief Executive Officer</label>
                <select name="CEOId" required class="form-control" asp-items="ceoslist"></select>
            </div>
            <div>
                <label  class="control-label">Date of Appointment </label>
                <input type="date" name="DateofAppointment" required class="form-control"/>
            </div>
            <div>
                <label  class="control-label">End of term </label>
                <input type="text" name="Endofterm" required class="form-control"/>
            </div>
            <div class="form-group">
                <label  class="control-label">Name of the Chairperson</label>
                <select name="DirectorId" required class="form-control" asp-items="chairman"></select>
            </div>
        </div>
    }
    @if (ViewBag.type != null && ViewBag.type.ToString() == "Director")
    {
        var corporation = new SelectList(_context.StateCorporation, "Id", "Name");
        var directors = _usermanager.GetUsersInRoleAsync("Director").Result.Select(a => new SelectListItem
                {
                    Text = $"{a.UserName}",
                    Value = a.Id.ToString()
                });
        <input type="hidden" name="CategoryId" value="@ViewBag.EvaluationTypeId"/>
        <input type="hidden" name="type" value="Director"/>
        <div class="col-md-6">
            <div class="form-group">
                <label  class="control-label">Name of the State Corporate</label>
                <select name="corporationId" required class="form-control" asp-items="corporation"></select>
            </div>
            <div class="form-group">
                <label  class="control-label">Name of person being evaluated/position</label>
                <select name="DirectorId" required class="form-control" asp-items="directors"></select>
            </div>
            <div>
                <label  class="control-label">Date of Appointment </label>
                <input type="date" name="DateofAppointment" required class="form-control"/>
            </div>
            <div>
                <label  class="control-label">End of term </label>
                <input type="text" name="Endofterm" required class="form-control"/>
            </div>
        </div>
    }
    <table border="0" class="table table-striped table-hover table-bordered display">
        <thead>
            <tr style="height: 5px!important;line-height: 2%;">
                <th colspan="2"></th>
                <th colspan="@Model.Take(1).SelectMany(x=>x.RespondOtions).Count()" style="text-align: center;">Scores</th>
            </tr>
            <tr>
                <th>
                    SN
                </th>
                <th>
                    Question
                </th>
                @foreach (var item in Model.Take(1).SelectMany(x => x.RespondOtions))
                {
                    <th style="width:auto!important">@item.Key</th>
                }
            </tr>
        </thead>
        <tbody>
            @{
                var quizSerialTable=0;
            }
    @foreach (var item in Model) {
                quizSerialTable++;
                <tr>
                    <input type="hidden" required="required" name="quizresponse" class="quizresponseTable" id="quizresponseTable"/>
                    <td >@quizSerialTable</td>
                    <td style="width:60%">@Html.DisplayFor(modelItem => item.Question)</td>
                    @foreach (var response in item.RespondOtions)
                    {
                        <td>
                            <input type="radio" class="tableradio" name="quize @item.Id" value="@response.Key|@item.Id" required="required"/>
                        </td>
                    }
                </tr>
    }
        </tbody>
    </table>
    <div class="form-group">
        <input type="submit" value="Submit" class="btn btn-primary" />
    </div>
</form>
@section Scripts{ 
    <script>
        $('form input:radio').on('input', function (e) {
            var quizeresponse = $(this).closest("tr").find(".quizresponseTable");
            quizeresponse.val($(this).val());
        })
    </script>
}